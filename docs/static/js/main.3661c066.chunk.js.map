{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","console","log","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACE,sBAAMC,SARa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAAyBO,OACvCN,EAAc,MAIhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAbhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCNbG,EAAO,uCAAC,WAAOC,GAAP,uBAAAC,EAAA,6DACVC,EADU,2DAC8CF,EAD9C,gEAEEG,MAAMD,GAFR,cAETE,EAFS,gBAGGA,EAAKC,OAHR,uBAGTC,EAHS,EAGTA,KACDC,EAAKD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAMF,EAAIE,MACVT,IAAG,UAACO,EAAIG,cAAL,aAAC,EAAYC,iBAAiBX,QAR3B,kBAYVK,GAZU,4CAAD,sDCERO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMT,EAAS,EAATA,IAEjC,OACE,sBAAKa,UAAU,yCAAf,UACE,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,4BAAIA,QCDGO,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAGvB,ECN0B,SAACA,GAC5B,MAA0Bd,mBAAS,CACjCoB,KAAK,GACLa,SAAQ,IAFV,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAdAC,qBAAU,WACPvB,EAAQC,GACLuB,MAAK,SAAAC,GAEJC,QAAQC,IAAIF,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAKf,CAACnB,IAEEoB,EDbsBO,CAAa3B,GAA7BY,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAMnB,OAJAM,QAAQC,IAAIP,GAKV,qCACM,oBAAIJ,UAAU,oCAAd,SAAmDf,IAClDmB,GAAS,mBAAGJ,UAAU,mCAAb,yBACV,qBAAKA,UAAU,YAAf,SAIUH,EAAOJ,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEQA,GADCA,EAAIC,aErB5B,SAASkB,IACd,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ4C,EAAWrB,KAAI,SAACR,GAAD,OAEb,cAAC,EAAD,CAEIA,SAAUA,GADLA,W,MCXzB8B,IAASC,OAEP,cAACH,EAAD,IAEAI,SAASC,eAAe,W","file":"static/js/main.3661c066.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue,...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n"," export const getGifs=async (category)=>{\r\n      const url=`https://api.giphy.com/v1/gifs/search?q=encodeURI(${category})&limit=10&api_key=bF3tL3JVnV8f4ZyBj3L2bSM11h9PgxuE`\r\n      const  resp=await fetch(url)\r\n      const {data}=await resp.json()\r\n      const gifs=data.map(img=>{\r\n            return {\r\n                id: img.id,\r\n                title:img.title,\r\n                url:img.images?.downsized_medium.url\r\n\r\n            }\r\n      })\r\n     return gifs\r\n  }","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n  // console.log(title,url)\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React  from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n  \r\n  \r\n  const {data:images,loading}=useFetchGifs(category)\r\n  // console.log(data)\r\n  console.log(loading)\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n          <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n          {loading&&<p className=\"animate__animated animate__flash\">Loanding...</p>}\r\n          <div className=\"card-grid\">\r\n            \r\n            \r\n                {\r\n                    images.map(img=>(\r\n                      <GifGridItem \r\n                          key={img.id}\r\n                          {...img}\r\n                      />\r\n                    ))\r\n                }\r\n            \r\n        </div>\r\n    </>\r\n      );\r\n    \r\n    \r\n};\r\n","import { useState,useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n const [state, setState] = useState({\r\n   data:[],\r\n   loading:true\r\n })\r\n useEffect(() => {\r\n    getGifs(category)\r\n      .then(imgs=>{\r\n     \r\n        console.log(imgs)\r\n        setState({\r\n            data: imgs,\r\n            loading:false\r\n        })\r\n          \r\n      \r\n      })\r\n  }, [category])\r\n \r\n return state\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport function GifExpertApp() {\r\n  const [categories, setCategories] = useState([\"One Punch\"]);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <ol>\r\n        {\r\n              categories.map((category) =>(\r\n              \r\n                <GifGrid \r\n                    key={category}\r\n                    category={category}\r\n                \r\n                />\r\n              )\r\n              )\r\n                \r\n      \r\n         \r\n        } \r\n        \r\n        \r\n      </ol>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n\n  <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}